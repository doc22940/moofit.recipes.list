<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
    <key>Identifier</key>
    <string>com.github.moofit-recipes.pkg.XcodeEdu</string>
    <key>Description</key>
    <string>Creates an installer package from a supplied .xip file downloaded
            using Facebook's "xcode.downloader" recipe, and extracted using
            their "xcode.extract" recipe from their AutoPkg repo
            "com.github.facebook.Recipes-for-AutoPkg". This recipe also adds a
            postflight script to the package, to install the command-line tools
            and configure these for education lab use.

            Due to Apple signed packages not being able to install to SIP
            protected areas when called via a postflight, the additional
            packages are installed by a self-destrictible LaunchDaemon which is
            called immediately after the "parent" Xcode installer is complete.
            This LaunchDaemon runs a script (both stored in /tmp) which installs
            all 3 additional component packages, and then unloads and deletes
            the launchdaemon, and itself.

            This kind of installation package would typically be used in lab
            enviroments, where users don't have admin rights.</string>
    <key>Input</key>
    <dict>
        <key>NAME</key>
        <string>XcodeEdu</string>
        <key>APPLE_ID</key>
        <string></string>
        <key>PASSWORD</key>
        <string></string>
    </dict>
    <key>MinimumVersion</key>
    <string>0.5.1</string>
    <key>ParentRecipe</key>
    <string>com.facebook.autopkg.xcode.extract</string>
    <key>Process</key>
    <array>
        <dict>
            <key>Processor</key>
            <string>PkgRootCreator</string>
            <key>Arguments</key>
            <dict>
                <key>pkgroot</key>
                <string>%RECIPE_CACHE_DIR%/pkgroot</string>
                <key>pkgdirs</key>
                <dict>
                    <key>payload/Applications</key>
                    <string>0775</string>
                    <key>payload/private</key>
                    <string>0755</string>
                    <key>payload/private/tmp</key>
                    <string>0777</string>
                    <key>scripts</key>
                    <string>0755</string>
                </dict>
            </dict>
        </dict>
        <dict>
            <key>Processor</key>
            <string>Copier</string>
            <key>Arguments</key>
            <dict>
                <key>destination_path</key>
                <string>%pkgroot%/payload/Applications/XcodeEdu.app</string>
                <key>source_path</key>
                <string>%RECIPE_CACHE_DIR%/Xcode_unpack/XcodeEdu.app</string>
            </dict>
        </dict>
        <dict>
            <key>Processor</key>
            <string>PlistEditor</string>
            <key>Comment</key>
            <string>Make launchdaemon plist to call xcodeComponentsInstaller.sh
                    script at /tmp</string>
            <key>Arguments</key>
            <dict>
                <key>output_plist_path</key>
                <string>%pkgroot%/payload/private/tmp/uk.co.moof-it.xcodeComponentsInstaller.plist</string>
                <key>plist_data</key>
                <dict>
                    <key>Label</key>
                    <string>uk.co.moof-it.xcodeComponentsInstaller</string>
                    <key>ProgramArguments</key>
                    <array>
                            <string>/tmp/xcodeComponentsInstaller.sh</string>
                    </array>
                    <key>RunAtLoad</key>
                    <true/>
                </dict>
            </dict>
        </dict>
        <dict>
            <key>Processor</key>
            <string>FileCreator</string>
            <key>Comment</key>
            <string>Make script to be called by the launchdaemon to install the
                    additional packages</string>
            <key>Arguments</key>
            <dict>
                <key>file_path</key>
                <string>%pkgroot%/payload/private/tmp/xcodeComponentsInstaller.sh</string>
                <key>file_content</key>
                <string>#!/bin/bash

# Install Xcode components from Xcode.app
/usr/sbin/installer -pkg /Applications/Xcode.app/Contents/Resources/Packages/MobileDevice.pkg -target / -verbose
/usr/sbin/installer -pkg /Applications/Xcode.app/Contents/Resources/Packages/MobileDeviceDevelopment.pkg -target / -verbose
/usr/sbin/installer -pkg /Applications/Xcode.app/Contents/Resources/Packages/XcodeSystemResources.pkg -target / -verbose

# Stop and remove LaunchDaemon and script
/bin/launchctl stop uk.co.moof-it.xcodeComponentsInstaller.plist
/bin/launchctl remove uk.co.moof-it.xcodeComponentsInstaller.plist
rm /tmp/uk.co.moof-it.xcodeComponentsInstaller.plist
rm /tmp/xcodeComponentsInstaller.sh</string>
                <key>file_mode</key>
                <string>0755</string>
            </dict>
        </dict>
        <dict>
            <key>Processor</key>
            <string>FileCreator</string>
            <key>Comment</key>
            <string>Make postinstall script</string>
            <key>Arguments</key>
            <dict>
                <key>file_path</key>
                <string>%pkgroot%/scripts/postinstall</string>
                <key>file_content</key>
                <string>#!/bin/bash

logProcess="xcodeEduPostinstall"
osVers=$(sw_vers -productVersion | awk -F "." '{print $2}')
cmdlineToolsTmp="/tmp/.com.apple.dt.CommandLineTools.installondemand.in-progress"

writelog()
{
	/usr/bin/logger -is -t "${logProcess}" "${1}"
}

writelog "Enabling Development Tools Security..."
/usr/sbin/DevToolsSecurity -enable
/Applications/Xcode.app/Contents/Developer/usr/bin/xcodebuild -license accept

if [[ "${osVers}" -ge 9 ]];
then
    writelog "Installing Xcode command line Tools on 10.9.x or higher..."

    # Create the placeholder file which is checked by the softwareupdate
    # tool before allowing the installation of the Xcode command line tools.
    /usr/bin/touch "${cmdlineToolsTmp}"

    # Find the last listed update in the Software Update feed with "Command Line Tools" in the name
    cmdlineTools=$(softwareupdate -l | awk '/\*\ Command Line Tools/ { $1=$1;print }' | tail -1 | sed 's/^[[ \t]]*//;s/[[ \t]]*$//;s/*//' | cut -c 2-)

    # Install the command line tools
    writelog "Installing via softwareupdate..."
    /usr/sbin/softwareupdate -i "${cmdlineTools}"

    # Remove the temp file
    if [[ -e "${cmdlineToolsTmp}" ]];
    then
        rm "${cmdlineToolsTmp}"
    fi
fi

writelog "Adding all users to Developer group..."
/usr/sbin/dseditgroup -o edit -a everyone -t group _developer

if [[ -e "/private/tmp/uk.co.moof-it.xcodeComponentsInstaller.plist" ]]
then
    writelog "Loading LaunchDaemon..."
    /bin/launchctl load -w "/private/tmp/uk.co.moof-it.xcodeComponentsInstaller.plist"
else
    writelog "LaunchDaemon not found. Please install additional components manually."
fi</string>
                <key>file_mode</key>
                <string>0755</string>
            </dict>
        </dict>
        <dict>
            <key>Processor</key>
            <string>PkgCreator</string>
            <key>Comment</key>
            <string>Create package</string>
            <key>Arguments</key>
            <dict>
                <key>pkg_request</key>
                <dict>
                    <key>chown</key>
                    <array>
                        <dict>
                            <key>path</key>
                            <string>Applications</string>
                            <key>user</key>
                            <string>root</string>
                            <key>group</key>
                            <string>admin</string>
                            <key>mode</key>
                            <string>0775</string>
                        </dict>
                        <dict>
                            <key>path</key>
                            <string>private</string>
                            <key>user</key>
                            <string>root</string>
                            <key>group</key>
                            <string>wheel</string>
                            <key>mode</key>
                            <string>0755</string>
                        </dict>
                        <dict>
                            <key>path</key>
                            <string>private/tmp</string>
                            <key>user</key>
                            <string>root</string>
                            <key>group</key>
                            <string>wheel</string>
                            <key>mode</key>
                            <string>0777</string>
                        </dict>
                        <dict>
                            <key>path</key>
                            <string>private/tmp/uk.co.moof-it.xcodeComponentsInstaller.plist</string>
                            <key>user</key>
                            <string>root</string>
                            <key>group</key>
                            <string>wheel</string>
                            <key>mode</key>
                            <string>0644</string>
                        </dict>
                    </array>
                    <key>id</key>
                    <string>com.apple.dt.Xcode</string>
                    <key>options</key>
                    <string>purge_ds_store</string>
                    <key>scripts</key>
                    <string>%pkgroot%/scripts</string>
                    <key>pkgroot</key>
                    <string>%pkgroot%/payload</string>
                    <key>pkgdir</key>
                    <string>%RECIPE_CACHE_DIR%</string>
                </dict>
                <key>pkgname</key>
                <string>%NAME%-%version%</string>
            </dict>
        </dict>
    </array>
</dict>
</plist>
